什么是.NET？
什么是CLI？
什么是CLR？
什么是CLS?
IL是什么？
JIT是什么，它是如何工作的？
GC是什么，简述一下GC的工作方式？
类（class）和结构（struct）的区别是什么？它们对性能有影响吗？
.NET BCL里有哪些是类（结构），为什么它们不是结构（类）？在自定义类型时，您如何选择是类还是结构？
在.NET程序运行过程中，什么是堆，什么是栈？什么情况下会在堆（栈）上分配数据？它们有性能上的区别吗？“结构”对象可能分配在堆上吗？什么情况下会发生，有什么需要注意的吗？
泛型的作用是什么？它有什么优势？它对性能有影响吗？它在执行时的行为是什么？.NET BCL中有哪些泛型类型？举例说明平时编程中您定义的泛型类型。
异常的作用是什么？.NET BCL中有哪些常见的异常？在代码中您是如何捕获/处理异常的？在“catch (ex)”中，“throw”和“throw ex”有什么区别？您会如何设计异常的结构，什么情况下您会抛出异常？
List<T> 和T[]的区别是什么，平时你如何进行选择？Dictionary<TKey, TValue> 是做什么的？.NET BCL中还有哪些常用的容器？它们分别是如何实现的（哪种数据结构）？分别是适用于哪些场景？
抽象类和接口有什么区别？使用时有什么需要注意的吗？如何选择是定义一个“完全抽象”的抽象类，还是接口？什么是接口的“显式实现”？为什么说它很重要？
字符串是引用类型类型还是结构类型？它和普通的引用类型相比有什么特别的地方吗？使用字符串时有什么需要注意的地方？为什么说StringBuilder比较高效？在连接多个字符串时，它无论何时都比直接相加更高效吗？
如何高效地进行数组复制？“二维数组”和“数组的数组”有什么区别？在使用双重循环遍历一个二维数组时，如何选择内外层的遍历顺序？
什么是元编程，.NET有哪些元编程的手段和场景？什么是反射？能否举一些反射的常用场景？有人说反射性能较差，您怎么看待这个问题？有什么办法可以提高反射的性能吗？
委托是什么？匿名方法是什么？在C# 3.0中，Lambda表达式是什么？扩展方法是什么？LINQ是什么？您觉得C# 3.0中还有哪些重要的特性，它们带来了什么优势？BCL中哪些类库和这些特性有关？您平时最常用哪些？
工作之外您看哪些技术相关的书、网站、社区、项目等等？您还接触哪些.NET以外的技术，能和.NET或.NET中有针对性的部分做个对比吗？

.net是微软推出的框架.公共运行语言规范.CLI是公共语言接口?,CLR公共语言运行环境,IL运行在.net之上的类似汇编的语言,JIT即时编译用于首次加载时编译为可重复运行的模块,GC垃圾收集,主要是根据索引数判断是否收回,有定时机制.

类有类的生存周期而结构没有,结构不能new，结构是值类型在栈里，类在堆里.BCL里有Math?性能考虑,结构需要,struct足够.没有逻辑，常量，事件，嵌套类型或者只是提供单纯结构的选择struct.

笼统答之需要new的都在堆上,其余在栈中.函数中声明的对象会在当前栈上分配.有区别,栈能够自动收回.结构对象可以分配在堆上,结构对象过大时就会发生.

泛型用于类型安全的操作.优势是类型安全.没有.不清楚.集合,事件,代理.数据库操作时一般使用泛型.

中断流程,冒泡传递.编译异常,运行时异常,IO异常等.TryCatch捕获.throw不处理,而throw则抛出指定异常.依据逻辑不同声明不同一样.在底层业务无关时抛出,交由上层处理.

一个是泛型列表对象,一个是T类型数组,一般选择泛型列表对象,自有灵活,安全.字典泛型,传入指定TKey类型作为key,TValue作为内容.很多容器.List是双链列表,Dict是Hash.列表是变长的固定类型的集合,Dict是有一个对应关系.

继承和组合（继承多个）的区别.抽象允许有实现,接口没有实现逻辑.....

字符串是引用.有个字符串缓存池.他是不可变对象.SB是可变对象.不是,在链接数量少于一定量级时,还不如他的构造所带来的消耗.

Array.copy.一个是存内容,一个是存引用.先遍历外层.

对程序本身的编程,反射,ASP.net MVC使用.程序解析程序自己.数据库链接获取,IoC.适当的缓存+灵巧的架构,不会产生谈反射变的样子.缓存解决反射性能的好办法.

委托是函数的指针.不给名称的方法就是匿名方法.在C#3.0中Lambda就是简化了的匿名方法.语言集成本地查询.var,拓展方法,他们带来了脚本化的灵活.表达式类.Linq最常用.

博客猿,stackflow,javaeye,EF,Asp.netMVC,Mono.除开.net之外常用python.有一个C#与Python语言本身涵盖的设计模式比较.

#region 数据库篇

    1.维护数据库的完整性、一致性、你喜欢用触发器还是自写业务逻辑？为什么?

    答：

    尽可能用约束（包括CHECK、主键、唯一键、外键、非空字段）实现，这种方式的效率最好；其次用触发器，这种方式可以保证无论何种业务系统访问数据库都能维持数据库的完整性、一致性；最后再考虑用自写业务逻辑实现，但这种方式效率最低、编程最复杂，当为下下之策。

    2.什么是事务？什么是锁？请说出sql server中锁的隔离级别有哪些，默认是哪一种？

    答：

    事务是指一个工作单元，它包含了一组数据操作命令，并且所有的命令作为一个整体一起向系统提交或撤消请求操作，即这组命令要么都执行，要么都不执行。

    锁是在多用户环境中对数据的访问的限制。SqlServer自动锁定特定记录、字段或文件，防止用户访问，以维护数据安全或防止并发数据操作问题，锁可以保证事务的完整性和并发性。

    3.什么是索引，有什么优点？使用索引需要注意些什么？

    答：

    索 引与书的目录类似，可以快速定位要查找的数据所有位置，索引使数据库程序无需扫描整个表，就可以在其中找到所需要的数据，索引包含了一个表中包含值的列 表，其中包含了各个值的行所存储的位置，索引可以是单个或一组列，索引提供的表中数据的逻辑位置，合理划分索引能够大大提高数据库性能。

    索引需要注意：加索引的列一定要是经常使用来条件筛选的列，并且where中要避免对有索引的列进行计算，索引并不是越多越好，索引会占用更多的存储空间，也会对insert 、update、delete这些操作有一定的性能影响。

    4.视图是什么？游标是什么？

    答：

    视图是一种虚拟表，虚拟表具有和物理表相同的功能，可以对虚拟表进行增该查操作;

    视图通常是一个或多个表的行或列的子集;

    视图的结果更容易理解（修改视图对基表不影响），获取数据更容易（相比多表查询更方便），限制数据检索（比如需要隐藏某些行或列），维护更方便。

    游标对查询出来的结果集作为一个单元来有效的处理，游标可以定位在结果集的特定行、从结果集的当前位置检索一行或多行、可以对结果集中当前位置进行修改、

    5.什么是存储过程？有什么优点？

    答：

    存储过程是一组予编译的SQL语句

    它的优点：

    1.允许模块化程序设计，就是说只需要创建一次过程，以后在程序中就可以调用该过程任意次。          　　

    2.允许更快执行，如果某操作需要执行大量SQL语句或重复执行，存储过程比SQL语句执行的要快。           　

    3.减少网络流量，例如一个需要数百行的SQL代码的操作有一条执行语句完成，不需要在网络中发送数百行代码。　　　　　　　

    4.更好的安全机制，对于没有权限执行存储过程的用户，也可授权他们执行存储过程。

    6.什么是触发器？有什么优点？

    答：

    触发器是一种特殊类型的存储过程，出发器主要通过事件触发而被执行的，

    触发器的优点：

    1.强化约束，触发器能够提供比CHECK约束;

    2.跟踪变化，触发器可以跟踪数据库内的操作，从而不允许未经允许许可的更新和变化;

    3.联级运算，比如某个表上的触发器中包含对另一个表的数据操作，而该操作又导致该表上的触发器被触发

    7、说一说储过程和触发器和优点和缺点

    优点：

    1、预编译，已优化，效率较高。避免了SQL语句在网络传输然后再解释的低效率。

    2、存储过程可以重复使用，减少开发人员的工作量。

    3、业务逻辑封装性好，修改方便。

    4、安全。不会有SQL语句注入问题存在。

    缺点：

    1、可移植性是存储过程和触发器最大的缺点。

    2、占用服务器端太多的资源，对服务器造成很大的压力

    3、不能做DDL。

    4、触发器排错困难，而且数据容易造成不一致，后期维护不方便。

    8、T-SQL中is null和null 的区别?

    答：is null 和 null 区别相当于 "是空盒子" 和 "空盒子"的区别

    9、写出一条Sql语句：取出表A中第31到第40记录（SQLServer,以自动增长的ID

    作为主键,注意：ID可能不是连续的。

    答：

    解1:

    select top 10 * from A where id not in (select top 30 id from A)

    解2:

    select top 10 * from A where id >(select max(id) from (select

    top 30 id from A )as A)

    解3：

    SELECT * FROM (

    SELECT *,ROW_NUMBER() over(ORDER BY ID) AS rownum FROM A) t

    WHERE t.rownum BETWEEN 31 AND 40

# endregion

#region .NET基础

    1.什么是装箱和拆箱？什么是重载？

    答：

    装箱就是把值类型转成引用类型，拆箱相反把引用转换成值类型。

    重载就是指一个方法名相同,参数个数或参数的类型不相同,返回值可以相同的方法。

    2.简单介绍下ADO.NET和ADO主要有什么改进？

    答：

    ADO以Recordset存储,而ADO.NET则以DataSet表示，ADO.NET提供了数据集和数据适配器，有利于实现分布式处理，降低了对数据库服务器资源的消耗。

    3. 简述 private、 protected、 public、 internal 修饰符的访问权限。

    答 .

    private : 私有成员, 在类的内部才可以访问。

    protected : 保护成员，该类内部和继承类中可以访问。

    public : 公共成员，完全公开，没有访问限制。

    internal: 在同一命名空间内可以访问。

    protected internal: 访问仅限于从包含类派生的当前程序集或类型。

    2 .列举ASP.NET 页面之间传递值的几种方式。

    答.

    参数方式：

    1、使用QueryString, 如....?id=1; response. Redirect()....;使用Server.Transfer

    2、表单提交

    共享变量

    1.使用Session变量

    2、Application

    3、Cookie

    3、说说你对领域驱动的理解？

    4、如何把一个array复制到arrayist里

    foreach( object arr in array1) arrayist1.Add(arr);

    或者

    arrayist1.AddRange(array1);

    5.C#中的委托是什么？事件是不是一种委托？

    答 ：

    委托可以把一个方法作为参数代入另一个方法。

    委托可以理解为指向一个函数的引用。

    是，是一种特殊的委托。

    委托本质上是一种“方法接口”，它相当于C/C++中的函数指针，当然它比函数指针安全，在C#中通常用于事件处理。事件不是委托，不过由于事件的性质决定了处理它的程序逻辑能访问的参数，因此，在C#中处理事件的逻辑都包装为委托。但是c#.net中的delegate委托，注意内存泄漏。

    6.详述.NET里类和结构（class和struct）的区别

    答：

    结构与类共享几乎所有相同的语法，但结构比类受到的限制更多：尽管结构的静态字段可以初始化，结构实例字段声明还是不能使用初始值设定项。

    结构不能声明默认构造函数（没有参数的构造函数）或析构函数。

    结构的副本由编译器自动创建和销毁，因此不需要使用默认构造函数和析构函数。实际上，编译器通过为所有字段赋予默认值（参见默认值表）来实现默认构造函数。

    结构不能从类或其他结构继承。

    结构是值类型 -- 如果从结构创建一个对象并将该对象赋给某个变量，变量则包含结构的全部值。复制包含结构的变量时，将复制所有数据，对新副本所做的任何修改都不会改变旧副本的数据。

    由于结构不使用引用，因此结构没有标识 -- 具有相同数据的两个值类型实例是无法区分的。C# 中的所有值类型本质上都继承自ValueType，后者继承自 Object。编译器可以在一个称为装箱的过程中将值类型转换为引用类型。

    结构具有以下特点：

    结构是值类型，而类是引用类型。

    结构的实例其它值类型一样在堆栈中分配内存，而类的对象实例在堆中分配内存。

    向方法传递结构时，结构是通过传值方式传递的，而不是作为引用传递的。

    与类不同，结构的实例化可以不使用 new 运算符。

    结构可以声明构造函数，但它们必须带参数。

    一个结构不能从另一个结构或类继承，而且不能作为一个类的基。所有结构都直接继承自 System.ValueType，后者继承自 System.Object。

    结构可以实现接口。

    在结构中初始化实例字段是错误的。

    7.override与重载的区别

    答 ：

    override 与重载的区别。重载是方法的名称相同。参数个数或参数类型不同，进行多

    次重载以适应不同的需要;

    Override 是进行基类中函数的重写。是为了实现多态。

    8.如果在一个B/S结构的系统中需要传递变量值，但是又不能使用Session、Cookie、Application，您有几种方法进行处理？

    答 ：

    this.Server.Transfer

    Response. Redirect()---QueryString

    9.描述一下C#中索引器的实现过程，是否只能根据数字进行索引？

    答：不是。可以用任意类型。c#使用索引器详解

    11.用.net做B/S结构的系统，您是用几层结构来开发，每一层之间的关系以及为什么要这样分层？

    答：

    一般为3层

    数据访问层(DAL)，业务层(BLL)，表示层(Web)。

    数据访问层对数据库进行增删查改。

    业务层一般分为二层，业务表观层实现与表示层的沟通，业务规则层实现用户密

    码的安全等。

    表示层为了与用户交互例如用户添加表单。

    优点： 分工明确，条理清晰，易于调试，而且具有可扩展性。

    缺点： 增加成本。

    13.什么叫应用程序域？

    答：

    应用程序域可以理解为一种轻量级进程。起到安全的作用。占用资源小。

    应用程序域为隔离正在运行的应用程序提供了一种灵活而安全的方法。

    应用程序域通常由运行库宿主创建和操作。有时，您可能希望应用程序以编程方式与应用程序域交互，例如想在不停止应用程序运行的情况下卸载某个组件时。

    应用程序域使应用程序以及应用程序的数据彼此分离，有助于提高安全性。单个进程可以运行多个应用程序域，并具有在单独进程中所存在的隔离级别。在单个进程中运行多个应用程序提高了服务器伸缩性。

    应用程序域具有以下特点：

    1、必须先将程序集加载到应用程序域中，然后才能执行该程序集。

    2、 一个应用程序域中的错误不会影响在另一个应用程序域中运行的其他代码。

    3、 能够在不停止整个进程的情况下停止单个应用程序并卸载代码。不能卸载单独的程序集或类型，只能卸载整个应用程序域。

    14.CTS、CLS、CLR分别作何解释？

    答：CTS：通用语言系统。CLS：通用语言规范。CLR：公共语言运行库。

    15.什么是受管制的代码？

    答：unsafe：非托管代码。不经过CLR运行。

    16.什么是强类型系统？

    答：RTTI：类型识别系统。

    17.net中读写数据库需要用到那些类？他们的作用？

    答：

    Connection连接对象，

    Command执行命令和存储过程，

    DataReader向前只读的数据流，

    DataAdapter适配器，支持增删查询，

    DataSet数据级对象，相当与内存里的一张或多张表。

    18.ASP.NET的身份验证方式有哪些？分别是什么原理？

    答：

    Windows 身份验证提供程序：提供有关如何将Windows 身份验证与Microsoft Internet 信息服务 (IIS) 身份验证结合使用来确保 ASP.NET 应用程序安全的信息。

    Forms 身份验证提供程序：提供有关如何使用您自己的代码创建应用程序特定的登录窗体并执行身份验证的信息。使用 Forms 身份验证的一种简便方法是使用 ASP.NET 成员资格和 ASP.NET 登录控件，它们一起提供了一种只需少量或无需代码就可以收集、验证和管理用户凭据的方法。

    Passport 身份验证提供程序：提供有关由Microsoft 提供的集中身份验证服务的信息，该服务为成员站点提供单一登录和核心配置

    19.什么是Code-Behind技术？

    答：代码后植。aspx,resx和cs三个后缀的文件，这个就是代码分离.实现了HTML代码和服务器代码分离.方便代码编写和整理.

    20.在.net中，配件assembly的意思是？

    答：程序集。（中间语言，元数据，资源，装配清单）

    21.常用的调用WebService的方法有哪些？

    答：

    1.使用WSDL.exe命令行工具。

    2.使用VS.NET中的Add Web Reference菜单选项

    22..net Remoting 的工作原理是什么？

    答：服务器端向客户端发送一个进程编号，一个程序域编号，以确定对象的位置。

    23.在C＃中，string str = null 与 string str ="" 请尽量使用文字或图，string存储在什么位置，StringBuilder使用场景？

    象说明其中的区别。

    答：

    string str = null 是不给他分配内存空间,而string str = "" 给它分配长度为空字符串的内存空间。当程序中涉及到多次的修改、追加同一个字符串变量或者是比较长的字符串时，要基于性能考虑要选择用StringBuilder。

    24.分析以下代码，完成填空

    string strTmp = "abcdefg某某某";

    int i= System.Text.Encoding.Default.GetBytes(strTmp).Length;

    int j= strTmp.Length;

    以上代码执行完后，i= j=

    答：i=13,j=10

    25.SQLSERVER服务器中，给定表 table1 中有两个字段 ID、LastUpdateDate，

    ID表示更新的事务号， LastUpdateDate表示更新时的服务器时间，请使用一句

    SQL语句获得最后更新的事务号

    答：select ID FROM table1 Where LastUpdateDate = (Select MAX(LastUpdateDate) FROM table1)

    26.简要谈一下您对微软.NET 构架下remoting和webservice两项技术的理解以及实际中的应用。

    答：WS主要是可利用HTTP，穿透防火墙。而Remoting可以利用TCP/IP，二进制传

    送提高效率。

    27.公司要求开发一个继承System.Windows.Forms.ListView类的组件，要求达到

    以下的特殊功能：点击ListView各列列头时，能按照点击列的每行值进行重排视

    图中的所有行 (排序的方式如DataGrid相似)。根据您的知识，请简要谈一下您的思路

    答：

    继承IComparetor自定义一个用于排序的类A，声明排序方式，当前排序的字段并实现Compare(object x,object y)方法，在里面取出ListView对应列的值进行比较。在第一次加载数据的时候为ListView的属性ListViewItemSorter赋一个A的实例，为ListView添加事件ColumnClick函数，并通过事件参数为ListViewItemSorter赋上相应的值用于排序，最后调用ListView的Sort方法实现数据排序。

    C#中winform ListView实现点击列头数据排序并修复数字列排序不对的问题

    28.面向对象的语言具有________性、_________性、________性

    答：封装、继承、多态。

    29、面向对象的原则有哪些

    答：

    单一职责、开放封闭原则，接口隔离原则，依赖倒置，里氏（Liskov）代换原则

    30.能用foreach遍历访问的对象需要实现 ________________接口或声明________________方法的类型。

    答：IEnumerable 、 GetEnumerator。

    31.GC是什么? 为什么要有GC?

    答：

    GC是垃圾收集器。程序员不用担心内存管理，因为垃圾收集器会自动进行管

    理。要请求垃圾收集，可以调用下面的方法之一：

    System.gc()

    Runtime.getRuntime().gc()

    32.C#常用的多线程传参数方法

    答：

    线程委托的方法为一个类的方法，初始化类就把类的属性初始化好

    委托的异步调用XXEventHanlder.BeginInvoke

    使用ParameterizedThreadStart委托

    具体请看：C#常用的多线程传参数方法

    33.接口是否可继承接口? 抽象类是否可实现(implements)接口? 抽象类是否可继承实体类(concrete class)?

    答：

    接口可以继承接口。抽象类可以实现(implements)接口，抽象类是否可继承实体类，但前提是实体类必须有明确的构造函数。

    34.构造器Constructor是否可被override?

    答：

    构造器Constructor不能被继承，因此不能重写override，但可以被重载overload。

    35.是否可以继承String类?

    答：String类是sealed类故不可以继承。

    36.try {}里有一个return语句，那么紧跟在这个try后的finally {}里的code会不会被执行，什么时候被执行，在return前还是后?

    答：会执行，在return前执行。

    37.c#中的swtich是否能作用在byte上，是否能作用在long上，是否能作用在String上?

    答：可以。

    38.short s1 = 1; s1 = s1 + 1;有什么错? short s1 = 1; s1 += 1;有什么错?

    答：

    short s1 = 1; s1 = s1 + 1;有错，s1是short型，s1+1是int型,不能显式转化为short型。可修改为s1 =(short)(s1 + 1) 。

    short s1 = 1; s1 += 1正确。

    39.如何处理几十万条并发数据？

    答：

    用存储过程或事务。取得最大标识的时候同时更新..注意主键不是自增量方式这种方法并发的时候是不会有重复主键的..取得最大标识要有一个存储过程来获取。

    40.Session有什么重大BUG，微软提出了什么方法加以解决？

    答：

    是iis中由于有进程回收机制，系统繁忙的话Session会丢失，可以用Sate Server或SQL Server数据库的方式存储Session不过这种方式比较慢，而且无法捕获Session的END事件。

    41.如何处理几十万条并发数据？

    答：用存储过程或事务。取得最大标识的时候同时更新。注意主键不是自增量方式这种方法并发的时候是不会有重复主键的。取得最大标识要有一个存储过程来获取.

    42.进程和线程的区别？

    答：

    进程是系统进行资源分配和调度的单位；线程是CPU调度和分派的单位，一个进程可以有多个线程，这些线程共享这个进程的资源。

    43.堆和栈的区别？

    答：

    栈：由编译器自动分配、释放。在函数体中定义的变量通常在栈上。

    堆：一般由程序员分配释放。用new、malloc等分配内存函数分配得到的就是在堆上，比如对象实例。

    44.成员变量和成员函数前加static的作用？

    答：

    又称为类成员变量和类成员函数。分别用来反映类的状态，这些成员是属于类的而不是类对象实例，因此static声明的变量在存储在内存的静态存储区，且只有一份，生命周期和应用程序域一致。

    45.请说明在.net中常用的几种页面间传递参数的方法，并说出他们的优缺点。

    答：

    session(viewstate) 简单，但易丢失

    application 全局

    cookie 简单，但可能不支持，可能被伪造

    input type="hidden" 简单，可能被伪造

    url参数 简单，显示于地址栏，长度有限

    数据库 稳定，安全，但性能相对弱

    46.请指出GAC的含义？

    答：全局程序集缓存。

    47.向服务器发送请求有几种方式？

    答：get,post。get一般为链接方式，post一般为按钮、表单方式。

    48.DataReader与Dataset有什么区别？

    答：一个是只能向前的只读游标，一个是内存中虚拟的数据库。

    49.软件开发过程一般有几个阶段？每个阶段的作用？

    答：需求分析，架构设计，代码编写，QA，部署

    50.在c#中using和new这两个关键字有什么意义，请写出你所知道的意义？using指令 和语句 new 创建实例 new 隐藏基类中方法。

    答：

    using 引入名称空间或者使用非托管资源

    using 语句块

    new 新建实例或者隐藏父类方法

    51.需要实现对一个字符串的处理,首先将该字符串首尾的空格去掉,如果字符串中间还有连续空格的话,仅保留一个空格,即允许字符串中间有多个空格,但连续的空格数不可超过一个.

    答：

     string inputStr = " xx xx ";

     inputStr = Regex.Replace(inputStr.Trim(), " +", " ");

    52.什么叫做sql注入，如何防止？请举例说明。

    答：

    利用sql关键字对网站进行攻击。过滤关键字'等'

    利用sql语言漏洞获得合法身份登陆系统。

    29. 如何理解.net中的垃圾回收机制?
　  答：.NET中的垃圾回收机制是引用程序对内存的回收和释放。当每次用new关键字创建一个对象时，运行库都要从托管堆中为其分配内存，因为空间是有限的，最终垃圾回收机制是要回收不用的内存的。已释放内存，重新使用。
    如身份验证的程序设计成：

    SqlCommand com=new SqlCommand("Select* from users where username='"+t_name.text+"' andpwd='"+t_pwd.text+"'");
    Select* from users where username='"+t_name.text+"' andpwd='"+1' and 1='1+"'


　    object obj=com.ExcuteScale();

　    if(obj!=null)

        {
          //通过验证
        }

    这段代码容易被sql注入。如用户在t_name中随便输入，在t_pwd中输入1' and 1='1  就可以进入系统了。

    ASP.NET MVC 5使用Filter过滤Action参数防止sql注入

    53.什么是ApplicationPool？

    答：

    Web应用，类似Thread Pool，提高并发性能。

    应用程序池可隔离站点和应用程序，有利于解决可靠性、可用性和安全性问题。 如果要实现下列目的之一，就应考虑创建应用程序池：

    1、将使用相同配置设置运行的站点和应用程序分为一组。

    2、隔离使用唯一配置设置运行的站点和应用程序。

    3、通过使用自定义标识运行应用程序来增强安全性。

    4、防止一个应用程序中的资源访问另一个应用程序中的资源。 例如，ISP 可以为每个客户的站点和应用程序创建单个应用程序池。 通过这种方式来分隔客户内容，可防止一个客户的资源访问另一个客户站点上的资源，即使这两个客户的站点都位于同一台 Web 服务器上也不例外。

    5、将不稳定的应用程序与运行良好的应用程序隔开，以此来提高性能

    54.什么是虚函数？什么是抽像函数？作用？

    答：

    虚函数：可由子类继承并重写的函数。关键词virtual声明，重写override。

    抽像函数：规定其非虚子类必须实现的函数，必须被重写。关键词abstract声明，重写override。

    主要用于对象对象的多态，在子类中重写方法，达到相同的操作，不同的行为效果。

    55.什么是反射？及劣势，有什么可以改进的地方

    答：

    动态获取程序集信息，可以程序在运行的时候动态一创建一个类的实例，或者调用方法。具体请看：.net反射存在的问题及优化技术

    56.说说单例模式的应用场景和C#中如何实现？

    答：

    资源共享的情况下，避免由于资源操作时导致的性能或损耗等。

    控制资源的情况下，方便资源之间的互相通信。如线程池等。

    1. Windows的Task Manager（任务管理器）就是很典型的单例模式（这个很熟悉吧），想想看，是不是呢，你能打开两个windows task manager吗？ 不信你自己试试看哦~

    2. windows的Recycle Bin（回收站）也是典型的单例应用。在整个系统运行过程中，回收站一直维护着仅有的一个实例。

    3. 网站的计数器，一般也是采用单例模式实现，否则难以同步。

    4. 应用程序的日志应用，一般都何用单例模式实现，这一般是由于共享的日志文件一直处于打开状态，因为只能有一个实例去操作，否则内容不好追加。

    5. Web应用的配置对象的读取，一般也应用单例模式，这个是由于配置文件是共享的资源。

    6. 数据库连接池的设计一般也是采用单例模式，因为数据库连接是一种数据库资源。数据库软件系统中使用数据库连接池，主要是节省打开或者关闭数据库连接所引起的效率损耗，这种效率上的损耗还是非常昂贵的，因为何用单例模式来维护，就可以大大降低这种损耗。

    7. 多线程的线程池的设计一般也是采用单例模式，这是由于线程池要方便对池中的线程进行控制。

    8. 操作系统的文件系统，也是大的单例模式实现的具体例子，一个操作系统只能有一个文件系统。

    9. HttpApplication 也是单位例的典型应用。熟悉ASP.Net(IIS)的整个请求生命周期的人应该知道HttpApplication也是单例模式，所有的HttpModule都共享一个HttpApplication实例。

    实现方法：

    static属性里面new ,构造函数private，如果是要求多线程情况，线程安全要double check

    56.什么是XML？

    答：XML即可扩展标记语言。eXtensible Markup Language.标记是指计算机所能理解的信息符号，通过此种标记，计算机之间可以处理包含各种信息的文章等。如何定义这些标记，即可以选择国际通用的标记语言，比如HTML，也可以使用象XML这样由相关人士自由决定的标记语言，这就是语言的可扩展性。XML是从SGML中简化修改出来的。它主要用到的有XML、XSL和XPath等。

    57.什么是Web Service？UDDI？

    答：Web Service便是基于网络的、分布式的模块化组件，它执行特定的任务，遵守具体的技术规范，这些规范使得Web Service能与其他兼容的组件进行互操作。UDDI 的目的是为电子商务建立标准；UDDI是一套基于Web的、分布式的、为Web Service提供的、信息注册中心的实现标准规范，同时也包含一组使企业能将自身提供的Web Service注册，以使别的企业能够发现的访问协议的实现标准。

    58.什么是ASP.NET中的用户控件？一般什么时候用？

    答：

    用户控件继承于UserControl，一般用在内容多为静态,或者少许会改变的情况下.类似ASP中的include..但是功能要强大的多。一般多个页面公共的部分会考虑到用用户控件，这样可以复用代码，减少代码量，而且维护方便，可以利用控件的输出缓存，提高程序的性能。

    59.列举一下你所了解的XML技术及其应用

    答：xml用于配置,用于保存静态数据类型，当数据量不是很的情况下也可以用来保存数据，接触XML最多的是web Services..和config

    61.什么是SOAP,有哪些应用。

    答：

    simple object access protocal,简单对象接受协议.以xml为基本编码结构,建立在已有通信协议上(如http,不过据说ms在搞最底层的架构在tcp/ip上的

    soap)的一种规范Web Service使用的协议。

    62.C#中 property 与 attribute的区别，他们各有什么用处，这种机制的好处在哪里？

    答：

    一个是属性，用于存取类的字段，一个是特性，用来标识类，方法等的附加性质。

    property可以控制对字段的访问。

    attribute一处定义，多处使用。

    63.XML 与 HTML 的主要区别

    答：

    1. XML是区分大小写字母的，HTML不区分。

    2. 在HTML中，如果上下文清楚地显示出段落或者列表键在何处结尾，那么你可以

    省略</p>或者</li>之类的结束标记。在XML中，绝对不能省略掉结束标记。

    3. 在XML中，拥有单个标记而没有匹配的结束标记的元素必须用一个 / 字符作为

    结尾。这样分析器就知道不用 查找结束标记了。

    4. 在XML中，属性值必须分装在引号中。在HTML中，引号是可用可不用的。

    5. 在HTML中，可以拥有不带值的属性名。在XML中，所有的属性都必须带有相应

    的值。

    64.c#中的三元运算符是？

    答：？：

    65.当整数a赋值给一个object对象时，整数a将会被？

    答：装箱。

    66.public static const int A=1;这段代码有错误么？是什么？

    答：const不能用static修饰。

    67.float f=-123.567F; int i=(int)f;i的值现在是_____?

    答：-123。

    68.用sealed修饰的类有什么特点？

    答：密封，不能继承。

    69.在Asp.net中所有的自定义用户控件都必须继承自________?

    答：Control。

    70.在.Net中所有可序列化的类都被标记为_____?

    答：[serializable]

    71.当类T只声明了私有实例构造函数时，则在T的程序文本外部，___可以___（可以 or 不可以）从T派生出新的类，不可以____（可以 or 不可以）直接创建T的任何实例。

    答：不可以，不可以。

    72..net的错误处理机制是什么？

    答：

    .net错误处理机制采用try->catch->finally结构，发生错误时，层层上抛，直到找到匹配的Catch为止。

    73.在.net（C# or vb.net）中如何取消一个窗体的关闭。

    答：private void Form1_Closing(object sender,

    System.ComponentModel.CancelEventArgs e)

    {
    e.Cancel=true;
    }

    74.在.net（C# or vb.net）中，Appplication.Exit 还是 Form.Close有什么

    不同？

    答：一个是退出整个应用程序，一个是关闭其中一个form。

    75.某一密码仅使用K、L、M、N、O共5个字母，密码中的单词从左向右排列，密

    码单词必须遵循如下规则：

    （1） 密码单词的最小长度是两个字母，可以相同，也可以不同

    （2） K不可能是单词的第一个字母

    （3） 如果L出现，则出现次数不止一次

    （4） M不能使最后一个也不能是倒数第二个字母

    （5） K出现，则N就一定出现

    （6） O如果是最后一个字母，则L一定出现

    问题一：下列哪一个字母可以放在LO中的O后面，形成一个3个字母的密码单词？

    A) K B)L C) M D) N

    答案:B

    问题二：如果能得到的字母是K、L、M，那么能够形成的两个字母长的密码单词的

    总数是多少？

    A)1个 B)3个 C)6个 D）9个

    答案:A

    问题三：下列哪一个是单词密码？

    A) KLLN B) LOML C) MLLO D)NMKO

    答案:C

    76. 62-63=1 等式不成立，请移动一个数字（不可以移动减号和等于号），使得等

    式成立，如何移动？

    答案:62移动成2的6次方

    77.C#可否对内存进行直接的操作？

    答：

    在.net下，.net引用了垃圾回收（GC）功能，它替代了程序员 不过在C#中，不能直接实现Finalize方法，而是在析构函数中调用基类的Finalize()方法

    78.写一个HTML页面，实现以下功能，左键点击页面时显示“您好”，右键点击

    时显示“禁止右键”。并在2分钟后自动关闭页面。

    答：

    <script language=javascript>

    setTimeout('window.close();',3000);

    function show()

    {
    if (window.event.button == 1)

    {
    alert("左");
    }
    else if (window.event.button == 2)

    {
    alert("右");
    }
    }

    </script>

    79、大概描述一下ASP.NET服务器控件的生命周期

    答：

    初始化-> 加载视图状态 ->处理回发数据 ->加载 ->发送回发更改通知-> 处理回发事件 ->预呈现-> 保存状态 ->呈现-> 处置 ->卸载

    教你记住ASP.NET WebForm页面的生命周期

    80、说说ASP.NET从IIS接受请求到响应的处理过程

    详解ASP.NET从IIS6 IIS7接受请求到响应的处理过程

    81.请简述面向对象的多态的特性及意义！

    答：

    面向对象的编程使用了派生继承以及虚函数机制.一个本来指向基类的对象指针可 以指向其派生类的.并访问从基类继承而来的成员变量和函数.而虚函数是专门为这个特性设计的,这个函数在每个基类的派生类中都是同一个名字,但函数体却并 不一定相同,派生类往往为实现自己的功能而修改这个虚函数.这样用一个指针就能够实现对多种不同的派生类的访问, 并实现其派生类的特定功能(代码 )

    82.，&和&&的区别。

    &是位运算符，表示按位与运算，&&是逻辑运算符，表示逻辑与（and）.

    83.a=10,b=15，在不用第三方变量的前提下，把a,b的值互换

    答：a=a+b;b=a-b;a=a-b;

    84.error和exception有什么区别?

    答：

    error 表示恢复不是不可能但很困难的情况下的一种严重问题。比如说内存溢出。不可能指望程序能处理这样的情况。

    exception 表示一种设计或实现问题。也就是说，它表示如果程序运行正常，从不会发生的情况。

    85.<%# %> 和 <% %> 有什么区别？

    答：

    <%# %>表示绑定的数据源

    <% %>是服务器端代码块

    86.你觉得ASP.NET 2.0（VS2005）和你以前使用的开发工具（.Net 1.0或其他）有什么最大的区别？你在以前的平台上使用的哪些开发思（pattern /architecture）可以移植到ASP.NET 2.0上 (或者已经内嵌在ASP.NET 2.0中)

    答：

    1、 ASP.NET 2.0 把一些代码进行了封装打包,所以相比1.0相同功能减少了很

    多代码.

    2 、同时支持代码分离和页面嵌入服务器端代码两种模式,以前1.0版本,.NET提示帮助只有在分离的代码文件,无 法 在页面嵌入服务器端代码获得帮助提示,

    3 、代码和设计界面切换的时候,2.0支持光标定位.这个我比较喜欢

    4、 在绑定数据,做表的分页.Update,Delete,等操作都可以可视化操作,方便了初学者

    5 、在ASP.NET中增加了40多个新的控件,减少了工作量

    87.重载与覆盖的区别？

    答：

    1、方法的覆盖是子类和父类之间的关系，是垂直关系；方法的重载是同一个类中方法之间的关系，是水平关系

    2、覆盖只能由一个方法，或只能由一对方法产生关系；方法的重载是多个方法之间的关系。

    3、覆盖要求参数列表相同；重载要求参数列表不同。

    4、覆盖关系中，调用那个方法体，是根据对象的类型（对象对应存储空间类型）来决定；重载关系，是根据调 用时的实参表与形参表来选择方法体的。

    88.什么是WSE？目前最新的版本是多少？

    答：WSE (Web Service Extension) 包来提供最新的WEB服务安全保证，目前最新版本2.0。

    89.abstract class和interface有什么区别?

    答：

    声明方法的存在而不去实现它的类被叫做抽象类（abstract class），它用于要创建一个体现某些基本行为的类，并为该类声明方法，但不能在该类中实现该类的情况。不能创建abstract 类的实例。然而可以创建一个变量，其类型是一个抽象类，并让它指向具体子类的一个实例。不能有抽象构造函数或抽象静态方法。Abstract 类的子类为它们父类中的所有抽象方法提供实现，否则它们也是抽象类为。取而代之，在子类中实现该方法。知道其行为的其它类可以在类中实现这些方法。

    接口（interface）是抽象类的变体。在接口中，所有方法都是抽象的。多继承性可通过实现这样的接口而获得。接口中的所有方法都是抽象的，没有一个有程序体。接口只可以定义static final成员变量。接口的实现与子类相似，除了该实现类不能从接口定义中继承行为。当类实现特殊接口时，它定义（即将程序体给予）所有这种接口的方法。然后，它可以在实现了该接口的类的任何对象上调用接口的方法。由于有抽象类，它允许使用接口名作为引用变量的类型。通常的动态联编将生效。引用可以转换到接口类型或从接口类型转换，instanceof 运算符可以用来决定某对象的类是否实现了接口。

    90、概述O/R Mapping 的原理，说说一你用过的所有ORM框架，你最喜欢哪一种，为什么？有没有觉得可以改进的地方？

    答：利用反射，配置将对象和数据库表映射。

#endregion .NET基础

#region 虚无缥缈情怀篇

    1、对你来说工作中最重要的是什么？

    答：团队目标的实现。（这是所有公司希望员工拥有的素质）

    2、为什么愿意为本公司工作？

     答：因为我认为我可以与贵公司取得共同的发展。（暗示留下我可能为公司带来的益处）

    3、你认为公司为什么要聘用你？

    答：因为我认为我的能力和性格完全适合贵公司的这个职位。

    4、如果我们聘用你，你会待多久？

    答：我说过了，我想与贵公司共同发展，当然我相信这种发展是可持续的，我不愿意失去这个发展机会。（考虑忠诚度问题，这样回答比较中肯，乱发誓在陌生人面前是完全没用的）

    5、在你看来，我们会为你的职业生涯规划一个怎样的环境？

    答：我有一个比较长远的职业生涯规划目标，但不管是近期目标还是中长期目标，贵公司的环境恰恰与我的计划相吻合，我相信一定能在贵公司的帮助下实现自己的规划。（看你的计划性，如果知道公司的一些具体情况，也可顺便拍拍马屁，但不能过头）

    6、你的优点是什么？

    答：优点是不喜欢多说，喜欢多做。（每个老板都喜欢的脚踏实地而不是夸夸其谈的员工）

    7、什么是你最大的弱点？友情提示：不妨借自我批评来自我表扬。

    答1：我的短处是心比较软，总是不擅于推辞别人的要求。（体现你的乐于助人）

    答2：我过去不太注重与人的沟通，觉得只要技术好就可以了，但随着年龄的增长和接触更多的人，我觉得与人沟通也很重要，我现在正努力地锻炼提高自己的沟通能力

    8、你的业余时间（爱好）喜欢做什么？

    答：我经常会去打篮球，喜欢户外运动，听音乐和看电影

    9、你对薪水的期望是多少？

    答：望可以根据贵公司的情况以及本地软件业行情还有我的能力给出一个合理的薪金。

    10、如果……的话，你怎么办？

    答：如果在我的利益呵公司的利益之间选择，我会毫不犹豫选择公司。

    11、你对我们公司有什么想法？

    友情提示：这可体现你对公司前景的关注，切忌回答：“都很好，没什么想法。”，参考回答：“贵公司XX地方做的很好，但XX地方需要加强”， 不宜多说。

#endregion 虚无缥缈情怀篇

public static void Reverse(int[] array, int begin, int end)
{
    while (end > begin)
    {
        int temp = array[begin];
        array[begin] = array[end];
        array[end] = temp;

        begin++;
        end--;
    }
}

数据结构

队列：先进先出 队列
栈：先进后出 杯子