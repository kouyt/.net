__author__ = 'libw '

分支好像要交Realase。。。
不知不觉就使用了pyhton的格式，是最近在一直学习的缘故

Github的issue功能：
    1 - 定义
    2 - 功能点
    3 - 额外属性
    4 - 延伸
    

[1](什么是issue)
    -   issue对于个人而言是一个备忘录列表
        -   对于个人而言，你可以把下一步要完成的工作，一般指bug修复，或添加分支等，放在Github库上。既可以提醒又可以统一管理，
            就像我正在用的JIRA一样。不过Github不自动生成专门的号码来辨识issue，需要靠自己注意。
        -   对于团队而言，这是一个协作系统
[2](功能点)
    -   在项目托管给GitHub后，每一次提交（commit），都可以跟某个issue关联，在comment title #n 的方式就可以关联第n个issue
        -   例：
            comment #1      -这个提交会出现在issue的记录中
            如果添加：
                -   fix #n      -提交记录出现在第n个issue
                -   fixes #n
                -   fixed #n
                -   colse #n    -自动关闭第n个issue
                -   closes #n
                -   closed #n
[3](额外属性)
    -   Labels，标签。包括 enhancement、bug、invalid 等，表示 issue 的类型，解决的方式
    -   Milestone，里程碑。通常用来做版本管理，v0.1、v1.0之类的，也可以是任意自定义字符串。一个里程碑对应的所有 issue 都被关闭后，这个里程碑会被自动认为已经达成。               
    -   Assignee，责任人。指定这个 issue 由谁负责来解决
    
[4](延伸)
    -   其实，GitHub 的 issue ，就是一个轻量级协作系统。它的 comment 支持 GitHub Flavored Markdown，
        可以进行内容丰富的交流。Git 本身就是分布式的代码版本控制软件，是为了程序员的协作而设计的。
        而 issue 的 Assignee 功能，就是这个在线协作系统的核心，足以让一群线上的开发者，一起完成一个软件项目。
    -   单词要认真记啊。。。，混蛋，最近银魂看多了，就变成这个风格了  
    -   2016-5-21 
    -   准备打篮球  
        
        

